'''

    To use this script, you must firstly run 'Get-SID-Groups' which will populate a CSV file to be used in the script.
    This CSV file will contain: AD Group Name + AD Group SID
    All the files that must exist in the script directory for it to work properly are:

    customer_info.csv - Generated by Powershell Script to populate NPS/RADIUS Profiles
    full-xml-template.xml (Template for the script to generate a new XML file, this must not be removed)
    get_config.py - This script you're viewing right now that does all the magic
    Get-SID-Groups.ps1 - This powershell script will generate a CSV file that must be copied to the the directory of this script before running it!
    network_policy.txt - TXT template for the XML formatting of a network policy in RADIUS
    radius_profile.txt - TXT template for the XML formatting of a radius profile in RADIUS

    (The 2 text templates are not very dynamic for other customers except CAN, generic attributes exist like 802.11 NAS PORT TYPE, etc..)

    These files should be downloaded with the original python script as it is a formatted
    template for the script to run. Anything that looks like %word% is pulled into this script
    to be reformatted and will generate a new XML file to be used on the RADIUS server with the command:
    Import-NpsConfiguration *MYFILENAME.xml*

    This is tested on a Windows Server 2012 R2 and nothing else.
    
'''

import csv
nps_populate = []
nps_list = []
counter = 0

radius_writerlist = []
nps_writerlist = []
radiusclient_writerlist = []

_csvName = 'customer_info.csv'
_radiusName = 'radius_profile.txt'
_netPolicyName = 'network_policysrv2016.txt'
_radiusClientConfig = 'radius_clients.txt'
_xmlConfig = 'full-xml-template.xml'

#Define your RADIUS clients to be imported into NPS
_radiusClients = ['CLIENT01','CLIENT02']

#Define your RADIUS Client IPs
_radiusIPs = ['10.0.0.1','10.0.0.2']

#Define your Radius Shared Secret assuming all devices have the same secret, otherwise you will need to amend this script...
_radiusSharedSecret = 'mysharedsecret'

with open(_csvName) as file:
    rdr = csv.reader(file, delimiter=',',quotechar='"')
    nps_populate = [line.strip() for line in file]
file.close()

del nps_populate[0]

for entry in nps_populate:
    nps_list = entry.split(',')
    with open(_radiusName) as radius_nps_policy:
        _radiusFile = radius_nps_policy.read()

        nps_list[0] = nps_list[0].replace('"','')

        _radiusFile = _radiusFile.replace("%radius_child_name%","{0}".format(nps_list[0]))
        _radiusFile = _radiusFile.replace("%radius_name%","{0}".format(nps_list[0]))
        _radiusFile = _radiusFile.replace("%radius_vlan%",nps_list[0].replace('VLAN',''))
        radius_writerlist.append(_radiusFile)
    radius_nps_policy.close()

for entry in nps_populate:
    nps_list = entry.split(',')
    #Network Policies
    with open(_netPolicyName) as xml_nps_policy:
        _xmlFile = xml_nps_policy.read()

        nps_list[0] = nps_list[0].replace('"','')

        _xmlFile = _xmlFile.replace("%nps_child_name%","{0}".format(nps_list[0]))
        _xmlFile = _xmlFile.replace("%nps_name%","{0}".format(nps_list[0]))
        _xmlFile = _xmlFile.replace("%nps_action%","{0}".format(nps_list[0]))
        _xmlFile = _xmlFile.replace("%nps_group_sid%",nps_list[1])
        _xmlFile = _xmlFile.replace("%nps_sequence%",str(counter))
        nps_writerlist.append(_xmlFile)
        counter += 1
    xml_nps_policy.close()
    
counter = 0

for client in _radiusClients:
    with open(_radiusClientConfig) as radius_client_policy:
        _radiusClientFile = radius_client_policy.read()

        _radiusClientFile = _radiusClientFile.replace("%clientname%",_radiusClients[counter])
        _radiusClientFile = _radiusClientFile.replace("%clientip%",_radiusIPs[counter])
        _radiusClientFile = _radiusClientFile.replace("%sharedsecret%",_radiusSharedSecret)

        radiusclient_writerlist.append(_radiusClientFile)
        counter += 1
    radius_client_policy.close()
    print(_radiusClientFile)

counter = 0

with open(_xmlConfig) as _xml:
    _xmlOpened = _xml.read()

    for item in radius_writerlist:
        _radiusIndex = _xmlOpened.find('%radius_profiles_insert%')
        _xmlOpened = _xmlOpened[:_radiusIndex] + item + _xmlOpened[_radiusIndex:]
    _xmlOpened = _xmlOpened.replace('%radius_profiles_insert%','')

    for item in nps_writerlist:
        _npsIndex = _xmlOpened.find('%network_policy_insert%')
        _xmlOpened = _xmlOpened[:_npsIndex] + item + _xmlOpened[_npsIndex:]
    _xmlOpened = _xmlOpened.replace('%network_policy_insert%','')

    for item in radiusclient_writerlist:
        _radiusClientIndex = _xmlOpened.find('%radiusclients%')
        _xmlOpened = _xmlOpened[:_radiusClientIndex] + item + _xmlOpened[_radiusClientIndex:]
    _xmlOpened = _xmlOpened.replace('%radiusclients%','')

finalXML = open('xml-final-srv2016.xml','w')
finalXML.write(_xmlOpened)
finalXML.close()
